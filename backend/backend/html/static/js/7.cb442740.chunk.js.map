{"version":3,"sources":["views/pages/Login.js","routes.js","components/AppBreadcrumb.js","components/routing/ProtectedRoute.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"names":["Login","props","github_authentication_url","GITHUB_AUTH_URL","addQueryParameters","client_id","GITHUB_APP_CLIENTID","scope","state","useLocation","isAuthenticated","to","from","LOGIN_PATH","lg","offset","span","fluid","src","className","href","AccessDenied","React","lazy","routes","path","exact","name","component","required_role","AppBreadcrumb","currentLocation","pathname","getRouteName","find","route","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","push","active","length","getBreadcrumbs","map","breadcrumb","key","memo","ProtectedRoute","children","render","user","verify_role","role","ACCESS_DENIED","AppContent","fallback","color","idx","AppFooter","target","rel","ProfileIcon","avatarUrl","size","textColor","AppHeaderDropdown","variant","placement","caret","onClick","logout","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","position","type","height","alt","NavLink","activeClassName","_nav","_component","as","anchor","icon","customClassName","badge","text","AppSidebar","unfoldable","sidebarUnfoldable","selfHiding","show","onShow","console","log","onHide","items","navigation","DefaultLayout"],"mappings":"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","file":"static/js/7.cb442740.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect, useLocation } from 'react-router-dom'\nimport { CButton, CCol, CContainer, CImage, CRow } from '@coreui/react'\nimport { addQueryParameters } from 'src/util/requests'\nimport { GITHUB_AUTH_URL, GITHUB_APP_CLIENTID, LOGIN_PATH } from 'src/globals'\nconst Login = (props) => {\n  const github_authentication_url =\n    GITHUB_AUTH_URL +\n    addQueryParameters({\n      client_id: GITHUB_APP_CLIENTID,\n      scope: 'user',\n    })\n  const { state } = useLocation()\n\n  if (props.isAuthenticated) {\n    const to = state?.from ? state?.from && state.from !== LOGIN_PATH : '/'\n    return <Redirect to={to} />\n  }\n\n  return (\n    <CContainer>\n      <CRow>\n        <CCol lg={{ offset: 2, span: 8 }}>\n          <CImage fluid src=\"/wordcloud.png\" />\n        </CCol>\n      </CRow>\n\n      <CRow className=\"justify-content-center\">\n        <CCol className=\"text-center\">\n          <h1 className=\"mt-4\">Student Activity Dashboard</h1>\n          <h5 className=\"mb-4 text-muted\">CS314 Software Engineering</h5>\n          <CButton href={github_authentication_url}>Sign-in with GitHub</CButton>\n        </CCol>\n      </CRow>\n    </CContainer>\n  )\n}\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n}\n\nexport default Login\n","import React from 'react'\n\nconst AccessDenied = React.lazy(() => {\n  './views/pages/AccessDenied'\n})\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: Dashboard,\n    exact: true,\n    required_role: 'Student',\n  },\n  { path: '/login', name: 'Login' },\n  { path: '/access_denied', name: 'Access Denied', component: AccessDenied, exact: true },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute.name\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      breadcrumbs.push({\n        pathname: currentPathname,\n        name: getRouteName(currentPathname, routes),\n        active: index + 1 === array.length ? true : false,\n      })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React from 'react'\nimport { Route } from 'react-router'\nimport { Redirect } from 'react-router-dom'\nimport { LOGIN_PATH, ACCESS_DENIED, verify_role } from '../../globals'\nimport PropTypes from 'prop-types'\nexport default function ProtectedRoute({\n  children,\n  render,\n  required_role,\n  user,\n  isAuthenticated,\n  ...props\n}) {\n  return (\n    <Route\n      {...props}\n      render={() => {\n        if (!isAuthenticated) {\n          return <Redirect to={LOGIN_PATH} />\n        }\n        if (verify_role(required_role, user.role)) {\n          return children\n        }\n\n        return <Redirect to={ACCESS_DENIED} />\n      }}\n    />\n  )\n}\n\nProtectedRoute.propTypes = {\n  children: PropTypes.any,\n  isAuthenticated: PropTypes.bool.isRequired,\n  render: PropTypes.func,\n  user: PropTypes.object,\n  required_role: PropTypes.string,\n}\n","import React, { Suspense } from 'react'\nimport { Redirect, Switch, Route } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\nimport ProtectedRoute from './routing/ProtectedRoute'\nimport Login from 'src/views/pages/Login'\nimport { LOGIN_PATH } from '../globals'\n\nconst AppContent = (props) => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Switch>\n          {routes.map((route, idx) => {\n            return (\n              route.component && (\n                <ProtectedRoute\n                  {...props}\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  required_role={route.required_role}\n                >\n                  {' '}\n                  <route.component {...props} />\n                </ProtectedRoute>\n              )\n            )\n          })}\n          <Route\n            {...props}\n            path={LOGIN_PATH}\n            exact\n            name={'Login'}\n            render={() => <Login {...props} />}\n          />\n          <Redirect from=\"/\" to=\"/dashboard\" />\n        </Switch>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = (props) => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          CoreUI\n        </a>\n        <span className=\"ms-1\">&copy; 2021 creativeLabs.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\n          CoreUI for React\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CDropdown,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport PropTypes from 'prop-types'\n\nconst AppHeaderDropdown = (props) => {\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <ProfileIcon {...props} />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2 mb-1\">Account</CDropdownHeader>\n        <CDropdownItem href={'/'} onClick={props.logout}>\n          <CIcon name=\"cil-user\" className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href={'/'} onClick={props.logout}>\n          <CIcon name=\"cil-account-logout\" className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nAppHeaderDropdown.propTypes = {\n  logout: PropTypes.func.isRequired,\n}\n\nconst ProfileIcon = (props) => {\n  if (!props.user?.avatarUrl) {\n    return (\n      <CAvatar color=\"primary\" size=\"md\" textColor=\"white\">\n        <CIcon name=\"cil-user\" />\n      </CAvatar>\n    )\n  }\n\n  return <CAvatar size=\"md\" src={props.user.avatarUrl} />\n}\n\nProfileIcon.propTypes = {\n  user: PropTypes.object,\n  avatarUrl: PropTypes.string,\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport PropTypes from 'prop-types'\n\nconst AppHeader = (props) => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ms-md-1 d-lg-none\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon name=\"cil-menu\" size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink} activeClassName=\"active\">\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          {props.isAuthenticated && <AppHeaderDropdown {...props} />}\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nAppHeader.propTypes = {\n  isAuthenticated: PropTypes.bool,\n}\n\nexport default AppHeader\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { NavLink } from 'react-router-dom'\nconst _nav = [\n  {\n    _component: 'CNavItem',\n    as: NavLink,\n    anchor: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon name=\"cil-speedometer\" customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    },\n  },\n]\n\n// const _nav = [\n//   {\n//     _component: 'CNavItem',\n//     as: NavLink,\n//     anchor: 'Dashboard',\n//     to: '/dashboard',\n//     icon: <CIcon name=\"cil-speedometer\" customClassName=\"nav-icon\" />,\n//     badge: {\n//       color: 'info',\n//       text: 'NEW',\n//     },\n//   },\n//   {\n//     _component: 'CNavTitle',\n//     anchor: 'Theme',\n//   },\n//   {\n//     _component: 'CNavItem',\n//     as: NavLink,\n//     anchor: 'Colors',\n//     to: '/theme/colors',\n//     icon: <CIcon name=\"cil-drop\" customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     _component: 'CNavItem',\n//     as: NavLink,\n//     anchor: 'Typography',\n//     to: '/theme/typography',\n//     icon: <CIcon name=\"cil-pencil\" customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     _component: 'CNavTitle',\n//     anchor: 'Components',\n//   },\n//   {\n//     _component: 'CNavGroup',\n//     as: NavLink,\n//     anchor: 'Base',\n//     to: '/to',\n//     icon: <CIcon name=\"cil-puzzle\" customClassName=\"nav-icon\" />,\n//     items: [\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Accordion',\n//         to: '/base/accordion',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Breadcrumb',\n//         to: '/base/breadcrumbs',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Cards',\n//         to: '/base/cards',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Carousel',\n//         to: '/base/carousels',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Collapse',\n//         to: '/base/collapses',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'List group',\n//         to: '/base/list-groups',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Navs & Tabs',\n//         to: '/base/navs',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Pagination',\n//         to: '/base/paginations',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Popovers',\n//         to: '/base/popovers',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Progress',\n//         to: '/base/progress',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Spinners',\n//         to: '/base/spinners',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Tables',\n//         to: '/base/tables',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Tooltips',\n//         to: '/base/tooltips',\n//       },\n//     ],\n//   },\n//   {\n//     _component: 'CNavGroup',\n//     anchor: 'Buttons',\n//     icon: <CIcon name=\"cil-cursor\" customClassName=\"nav-icon\" />,\n//     items: [\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Buttons',\n//         to: '/buttons/buttons',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Buttons groups',\n//         to: '/buttons/button-groups',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Dropdowns',\n//         to: '/buttons/dropdowns',\n//       },\n//     ],\n//   },\n//   {\n//     _component: 'CNavGroup',\n//     anchor: 'Forms',\n//     icon: <CIcon name=\"cil-notes\" customClassName=\"nav-icon\" />,\n//     items: [\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Form Control',\n//         to: '/forms/form-control',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Select',\n//         to: '/forms/select',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Checks & Radios',\n//         to: '/forms/checks-radios',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Range',\n//         to: '/forms/range',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Input Group',\n//         to: '/forms/input-group',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Floating Labels',\n//         to: '/forms/floating-labels',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Layout',\n//         to: '/forms/layout',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Validation',\n//         to: '/forms/validation',\n//       },\n//     ],\n//   },\n//   {\n//     _component: 'CNavItem',\n//     as: NavLink,\n//     anchor: 'Charts',\n//     to: '/charts',\n//     icon: <CIcon name=\"cil-chart-pie\" customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     _component: 'CNavGroup',\n//     anchor: 'Icons',\n//     icon: <CIcon name=\"cil-star\" customClassName=\"nav-icon\" />,\n//     items: [\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'CoreUI Free',\n//         to: '/icons/coreui-icons',\n//         badge: {\n//           color: 'success',\n//           text: 'NEW',\n//         },\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'CoreUI Flags',\n//         to: '/icons/flags',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'CoreUI Brands',\n//         to: '/icons/brands',\n//       },\n//     ],\n//   },\n//   {\n//     _component: 'CNavGroup',\n//     anchor: 'Notifications',\n//     icon: <CIcon name=\"cil-bell\" customClassName=\"nav-icon\" />,\n//     items: [\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Alerts',\n//         to: '/notifications/alerts',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Badges',\n//         to: '/notifications/badges',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Modal',\n//         to: '/notifications/modals',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Toasts',\n//         to: '/notifications/toasts',\n//       },\n//     ],\n//   },\n//   {\n//     _component: 'CNavItem',\n//     as: NavLink,\n//     anchor: 'Widgets',\n//     to: '/widgets',\n//     icon: <CIcon name=\"cil-calculator\" customClassName=\"nav-icon\" />,\n//     badge: {\n//       color: 'info',\n//       text: 'NEW',\n//     },\n//   },\n//   {\n//     _component: 'CNavTitle',\n//     anchor: 'Extras',\n//   },\n//   {\n//     _component: 'CNavGroup',\n//     anchor: 'Pages',\n//     icon: <CIcon name=\"cil-star\" customClassName=\"nav-icon\" />,\n//     items: [\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Login',\n//         to: '/login',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Register',\n//         to: '/register',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Error 404',\n//         to: '/404',\n//       },\n//       {\n//         _component: 'CNavItem',\n//         as: NavLink,\n//         anchor: 'Error 500',\n//         to: '/500',\n//       },\n//     ],\n//   },\n// ]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarToggler,\n  CCreateNavItem,\n} from '@coreui/react'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = (props) => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      selfHiding=\"md\"\n      unfoldable={unfoldable}\n      show={sidebarShow}\n      onShow={() => console.log('show')}\n      onHide={() => {\n        dispatch({ type: 'set', sidebarShow: false })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\"></CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <CCreateNavItem items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = (props) => {\n  return (\n    <div>\n      <AppSidebar {...props} />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader {...props} />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent {...props} />\n        </div>\n        <AppFooter {...props} />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"sourceRoot":""}